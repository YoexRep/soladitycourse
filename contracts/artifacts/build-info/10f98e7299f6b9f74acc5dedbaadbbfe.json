{
	"id": "10f98e7299f6b9f74acc5dedbaadbbfe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleStorage.sol": {
				"content": "pragma solidity 0.8.7;\r\n\r\ncontract SimpleStorage{\r\n\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleStorage.sol": {
				"SimpleStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleStorage.sol\":26:62  contract SimpleStorage{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleStorage.sol\":26:62  contract SimpleStorage{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220500e965f0f5907d0e6794c47a6dcd756d16502410533a5036a703a15eddb44c864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220500e965f0f5907d0e6794c47a6dcd756d16502410533a5036a703a15eddb44c864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xE SWAP7 0x5F 0xF MSIZE SMOD 0xD0 0xE6 PUSH26 0x4C47A6DCD756D16502410533A5036A703A15EDDB44C864736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "26:36:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220500e965f0f5907d0e6794c47a6dcd756d16502410533a5036a703a15eddb44c864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xE SWAP7 0x5F 0xF MSIZE SMOD 0xD0 0xE6 PUSH26 0x4C47A6DCD756D16502410533A5036A703A15EDDB44C864736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "26:36:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 62,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 62,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220500e965f0f5907d0e6794c47a6dcd756d16502410533a5036a703a15eddb44c864736f6c63430008070033",
									".code": [
										{
											"begin": 26,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 62,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 62,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 62,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 62,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleStorage.sol\":{\"keccak256\":\"0x3ec48559783731c1c9a74fb061cc99eca4fc136efd3591e28d417cb1bcdcae8b\",\"urls\":[\"bzz-raw://fc2f148e800b13041cefbe9d33c916bc88da8507413eba49a19b0e818f824905\",\"dweb:/ipfs/QmUTUVTQL1Xz9JEEXtAZ6pD1etDrJLR8QsJ2iFKTrCfFbi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SimpleStorage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SimpleStorage.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SimpleStorage.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleStorage.sol",
					"exportedSymbols": {
						"SimpleStorage": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "SimpleStorage",
							"nameLocation": "35:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:36:0",
							"usedErrors": []
						}
					],
					"src": "0:62:0"
				},
				"id": 0
			}
		}
	}
}